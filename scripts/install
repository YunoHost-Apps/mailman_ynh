#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin_password=$YNH_APP_ARG_ADMIN_PASSWORD
language=$YNH_APP_ARG_LANGUAGE
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

# Register (book) web path
ynh_webpath_register $app $domain $path_url

ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app language  $language

#=================================================
# SSOWat configuration
#=================================================

if [ "$is_public" = "Yes" ];
then

    # Build regex list, i.e. "/mailman/listinfo,/mailman/listinfo/[listnames]$,..."
    regexList=$path_url/listinfo$

    for word in listinfo subscribe private roster
    do
        regexList="$regexList,$path_url/$word/[a-zA-Z%-]*$"
    done
    # This guys require potentially more complex stuff like mail adresses in the url, or slashes
    for word in options confirm images
    do
        regexList="$regexList,$path_url/$word/[a-zA-Z0-9%-%/%.%@]*$"
    done

    # Set the regex in yunohost, later taken into account by ssowatconf
    ynh_app_setting_set $app unprotected_regex -v $regexList
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

echo "mailman mailman/default_server_language select $language" | debconf-set-selections
echo "mailman mailman/site_languages  multiselect $language" | debconf-set-selections
echo "mailman mailman/create_site_list select " | debconf-set-selections
ynh_install_app_dependencies fcgiwrap mailman

#=================================================
# SET MAILMAN PASSWORD
#=================================================

/var/lib/mailman/bin/mmsitepass $admin_password

#=================================================
# MAILMAN CONFIGURATION
#=================================================

# Generate conf file from template
ynh_replace_string "__MAILMAN_DOMAIN__"   $domain   ../conf/mm_cfg.py
ynh_replace_string "__MAILMAN_WEB_PATH__" $path_url ../conf/mm_cfg.py
ynh_replace_string "__MAILMAN_LANGUAGE__" $language ../conf/mm_cfg.py
cp ../conf/mm_cfg.py /etc/mailman/mm_cfg.py

# Create a first "mailman" list
newlist mailman root@$domain $admin_password <<< "\n"
/var/lib/mailman/bin/genaliases

# Fix permissions
chown -hR list:list /var/lib/mailman/
/var/lib/mailman/bin/check_perms -f > /dev/null

#=================================================
# POSTFIX CONFIGURATION
#=================================================

# Add postfix configuration hook and regen postfix conf
cp -R ../sources/hooks/conf_regen/98-postfix_mailman /usr/share/yunohost/hooks/conf_regen/
yunohost service regen-conf postfix

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# RESTART SERVICES
#=================================================

yunohost app ssowatconf

systemctl enable mailman >/dev/null 2>&1
systemctl restart mailman
systemctl restart postfix
systemctl reload nginx
